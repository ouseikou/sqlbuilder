// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proto/api.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Driver int32

const (
	Driver_DRIVER_UNSPECIFIED Driver = 0
	Driver_DRIVER_POSTGRES    Driver = 1
	Driver_DRIVER_MYSQL       Driver = 2
	Driver_DRIVER_DORIS       Driver = 3
)

// Enum value maps for Driver.
var (
	Driver_name = map[int32]string{
		0: "DRIVER_UNSPECIFIED",
		1: "DRIVER_POSTGRES",
		2: "DRIVER_MYSQL",
		3: "DRIVER_DORIS",
	}
	Driver_value = map[string]int32{
		"DRIVER_UNSPECIFIED": 0,
		"DRIVER_POSTGRES":    1,
		"DRIVER_MYSQL":       2,
		"DRIVER_DORIS":       3,
	}
)

func (x Driver) Enum() *Driver {
	p := new(Driver)
	*p = x
	return p
}

func (x Driver) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Driver) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[0].Descriptor()
}

func (Driver) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[0]
}

func (x Driver) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Driver.Descriptor instead.
func (Driver) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

type BuilderStrategy int32

const (
	BuilderStrategy_STRATEGY_UNSPECIFIED BuilderStrategy = 0
	BuilderStrategy_STRATEGY_MODEL       BuilderStrategy = 1
	BuilderStrategy_STRATEGY_TEMPLATE    BuilderStrategy = 2
)

// Enum value maps for BuilderStrategy.
var (
	BuilderStrategy_name = map[int32]string{
		0: "STRATEGY_UNSPECIFIED",
		1: "STRATEGY_MODEL",
		2: "STRATEGY_TEMPLATE",
	}
	BuilderStrategy_value = map[string]int32{
		"STRATEGY_UNSPECIFIED": 0,
		"STRATEGY_MODEL":       1,
		"STRATEGY_TEMPLATE":    2,
	}
)

func (x BuilderStrategy) Enum() *BuilderStrategy {
	p := new(BuilderStrategy)
	*p = x
	return p
}

func (x BuilderStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuilderStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[1].Descriptor()
}

func (BuilderStrategy) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[1]
}

func (x BuilderStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuilderStrategy.Descriptor instead.
func (BuilderStrategy) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{1}
}

type CallType int32

const (
	CallType_CALL_TYPE_UNSPECIFIED CallType = 0
	CallType_CALL_TYPE_AGG         CallType = 1
	CallType_CALL_TYPE_INNER       CallType = 2
	CallType_CALL_TYPE_CUSTOM      CallType = 3
)

// Enum value maps for CallType.
var (
	CallType_name = map[int32]string{
		0: "CALL_TYPE_UNSPECIFIED",
		1: "CALL_TYPE_AGG",
		2: "CALL_TYPE_INNER",
		3: "CALL_TYPE_CUSTOM",
	}
	CallType_value = map[string]int32{
		"CALL_TYPE_UNSPECIFIED": 0,
		"CALL_TYPE_AGG":         1,
		"CALL_TYPE_INNER":       2,
		"CALL_TYPE_CUSTOM":      3,
	}
)

func (x CallType) Enum() *CallType {
	p := new(CallType)
	*p = x
	return p
}

func (x CallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[2].Descriptor()
}

func (CallType) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[2]
}

func (x CallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallType.Descriptor instead.
func (CallType) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{2}
}

type BuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Builders []*DeepWrapper  `protobuf:"bytes,1,rep,name=builders,proto3" json:"builders,omitempty"`
	Driver   Driver          `protobuf:"varint,2,opt,name=driver,proto3,enum=proto.Driver" json:"driver,omitempty"`
	Strategy BuilderStrategy `protobuf:"varint,3,opt,name=strategy,proto3,enum=proto.BuilderStrategy" json:"strategy,omitempty"`
}

func (x *BuilderRequest) Reset() {
	*x = BuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuilderRequest) ProtoMessage() {}

func (x *BuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuilderRequest.ProtoReflect.Descriptor instead.
func (*BuilderRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

func (x *BuilderRequest) GetBuilders() []*DeepWrapper {
	if x != nil {
		return x.Builders
	}
	return nil
}

func (x *BuilderRequest) GetDriver() Driver {
	if x != nil {
		return x.Driver
	}
	return Driver_DRIVER_UNSPECIFIED
}

func (x *BuilderRequest) GetStrategy() BuilderStrategy {
	if x != nil {
		return x.Strategy
	}
	return BuilderStrategy_STRATEGY_UNSPECIFIED
}

type DeepWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deep int32   `protobuf:"varint,1,opt,name=deep,proto3" json:"deep,omitempty"`
	Sql  *MixSql `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
}

func (x *DeepWrapper) Reset() {
	*x = DeepWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepWrapper) ProtoMessage() {}

func (x *DeepWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepWrapper.ProtoReflect.Descriptor instead.
func (*DeepWrapper) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{1}
}

func (x *DeepWrapper) GetDeep() int32 {
	if x != nil {
		return x.Deep
	}
	return 0
}

func (x *DeepWrapper) GetSql() *MixSql {
	if x != nil {
		return x.Sql
	}
	return nil
}

type Expression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call     string     `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	CallType CallType   `protobuf:"varint,2,opt,name=callType,proto3,enum=proto.CallType" json:"callType,omitempty"`
	Vars     []*MixVars `protobuf:"bytes,3,rep,name=vars,proto3" json:"vars,omitempty"`
	CallAs   string     `protobuf:"bytes,4,opt,name=callAs,proto3" json:"callAs,omitempty"`
	UseAs    bool       `protobuf:"varint,5,opt,name=useAs,proto3" json:"useAs,omitempty"`
}

func (x *Expression) Reset() {
	*x = Expression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expression) ProtoMessage() {}

func (x *Expression) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expression.ProtoReflect.Descriptor instead.
func (*Expression) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{2}
}

func (x *Expression) GetCall() string {
	if x != nil {
		return x.Call
	}
	return ""
}

func (x *Expression) GetCallType() CallType {
	if x != nil {
		return x.CallType
	}
	return CallType_CALL_TYPE_UNSPECIFIED
}

func (x *Expression) GetVars() []*MixVars {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (x *Expression) GetCallAs() string {
	if x != nil {
		return x.CallAs
	}
	return ""
}

func (x *Expression) GetUseAs() bool {
	if x != nil {
		return x.UseAs
	}
	return false
}

type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field   string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Table   string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Schema  string `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	Alias   string `protobuf:"bytes,4,opt,name=alias,proto3" json:"alias,omitempty"`
	AggAble bool   `protobuf:"varint,5,opt,name=aggAble,proto3" json:"aggAble,omitempty"`
	UseAs   bool   `protobuf:"varint,6,opt,name=useAs,proto3" json:"useAs,omitempty"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{3}
}

func (x *Column) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Column) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *Column) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *Column) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Column) GetAggAble() bool {
	if x != nil {
		return x.AggAble
	}
	return false
}

func (x *Column) GetUseAs() bool {
	if x != nil {
		return x.UseAs
	}
	return false
}

type MixSql struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Ref:
	//
	//	*MixSql_Model
	//	*MixSql_Template
	Ref isMixSql_Ref `protobuf_oneof:"ref"`
}

func (x *MixSql) Reset() {
	*x = MixSql{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MixSql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MixSql) ProtoMessage() {}

func (x *MixSql) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MixSql.ProtoReflect.Descriptor instead.
func (*MixSql) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{4}
}

func (m *MixSql) GetRef() isMixSql_Ref {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (x *MixSql) GetModel() *SQLReference {
	if x, ok := x.GetRef().(*MixSql_Model); ok {
		return x.Model
	}
	return nil
}

func (x *MixSql) GetTemplate() *SQLText {
	if x, ok := x.GetRef().(*MixSql_Template); ok {
		return x.Template
	}
	return nil
}

type isMixSql_Ref interface {
	isMixSql_Ref()
}

type MixSql_Model struct {
	Model *SQLReference `protobuf:"bytes,1,opt,name=model,proto3,oneof"`
}

type MixSql_Template struct {
	Template *SQLText `protobuf:"bytes,2,opt,name=template,proto3,oneof"`
}

func (*MixSql_Model) isMixSql_Ref() {}

func (*MixSql_Template) isMixSql_Ref() {}

type MixVars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Vars:
	//
	//	*MixVars_Column
	//	*MixVars_Expression
	//	*MixVars_Context
	//	*MixVars_Number
	Vars isMixVars_Vars `protobuf_oneof:"vars"`
}

func (x *MixVars) Reset() {
	*x = MixVars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MixVars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MixVars) ProtoMessage() {}

func (x *MixVars) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MixVars.ProtoReflect.Descriptor instead.
func (*MixVars) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{5}
}

func (m *MixVars) GetVars() isMixVars_Vars {
	if m != nil {
		return m.Vars
	}
	return nil
}

func (x *MixVars) GetColumn() *Column {
	if x, ok := x.GetVars().(*MixVars_Column); ok {
		return x.Column
	}
	return nil
}

func (x *MixVars) GetExpression() *Expression {
	if x, ok := x.GetVars().(*MixVars_Expression); ok {
		return x.Expression
	}
	return nil
}

func (x *MixVars) GetContext() string {
	if x, ok := x.GetVars().(*MixVars_Context); ok {
		return x.Context
	}
	return ""
}

func (x *MixVars) GetNumber() int64 {
	if x, ok := x.GetVars().(*MixVars_Number); ok {
		return x.Number
	}
	return 0
}

type isMixVars_Vars interface {
	isMixVars_Vars()
}

type MixVars_Column struct {
	Column *Column `protobuf:"bytes,1,opt,name=column,proto3,oneof"`
}

type MixVars_Expression struct {
	Expression *Expression `protobuf:"bytes,2,opt,name=expression,proto3,oneof"`
}

type MixVars_Context struct {
	Context string `protobuf:"bytes,3,opt,name=context,proto3,oneof"`
}

type MixVars_Number struct {
	Number int64 `protobuf:"varint,4,opt,name=number,proto3,oneof"`
}

func (*MixVars_Column) isMixVars_Vars() {}

func (*MixVars_Expression) isMixVars_Vars() {}

func (*MixVars_Context) isMixVars_Vars() {}

func (*MixVars_Number) isMixVars_Vars() {}

type MixField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Mix:
	//
	//	*MixField_Column
	//	*MixField_Expression
	Mix isMixField_Mix `protobuf_oneof:"mix"`
}

func (x *MixField) Reset() {
	*x = MixField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MixField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MixField) ProtoMessage() {}

func (x *MixField) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MixField.ProtoReflect.Descriptor instead.
func (*MixField) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{6}
}

func (m *MixField) GetMix() isMixField_Mix {
	if m != nil {
		return m.Mix
	}
	return nil
}

func (x *MixField) GetColumn() *Column {
	if x, ok := x.GetMix().(*MixField_Column); ok {
		return x.Column
	}
	return nil
}

func (x *MixField) GetExpression() *Expression {
	if x, ok := x.GetMix().(*MixField_Expression); ok {
		return x.Expression
	}
	return nil
}

type isMixField_Mix interface {
	isMixField_Mix()
}

type MixField_Column struct {
	Column *Column `protobuf:"bytes,1,opt,name=column,proto3,oneof"`
}

type MixField_Expression struct {
	Expression *Expression `protobuf:"bytes,2,opt,name=expression,proto3,oneof"`
}

func (*MixField_Column) isMixField_Mix() {}

func (*MixField_Expression) isMixField_Mix() {}

type SQLText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *SQLText) Reset() {
	*x = SQLText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLText) ProtoMessage() {}

func (x *SQLText) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLText.ProtoReflect.Descriptor instead.
func (*SQLText) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{7}
}

func (x *SQLText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type SQLReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  *Table        `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Join  []*Join       `protobuf:"bytes,2,rep,name=join,proto3" json:"join,omitempty"`
	Where []*Expression `protobuf:"bytes,3,rep,name=where,proto3" json:"where,omitempty"`
	// GroupBy 可以是 Column 或 Expression
	GroupBy     []*MixField   `protobuf:"bytes,4,rep,name=groupBy,proto3" json:"groupBy,omitempty"`
	Aggregation []*Expression `protobuf:"bytes,5,rep,name=aggregation,proto3" json:"aggregation,omitempty"`
	// Select 可以是 Column 或 Expression
	Select  []*MixField `protobuf:"bytes,6,rep,name=select,proto3" json:"select,omitempty"`
	OrderBy []*OrderBy  `protobuf:"bytes,7,rep,name=orderBy,proto3" json:"orderBy,omitempty"`
	Limit   *Limit      `protobuf:"bytes,8,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *SQLReference) Reset() {
	*x = SQLReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLReference) ProtoMessage() {}

func (x *SQLReference) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLReference.ProtoReflect.Descriptor instead.
func (*SQLReference) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{8}
}

func (x *SQLReference) GetFrom() *Table {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *SQLReference) GetJoin() []*Join {
	if x != nil {
		return x.Join
	}
	return nil
}

func (x *SQLReference) GetWhere() []*Expression {
	if x != nil {
		return x.Where
	}
	return nil
}

func (x *SQLReference) GetGroupBy() []*MixField {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *SQLReference) GetAggregation() []*Expression {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

func (x *SQLReference) GetSelect() []*MixField {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *SQLReference) GetOrderBy() []*OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *SQLReference) GetLimit() *Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data map[string]string `protobuf:"bytes,3,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{9}
}

func (x *Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Response) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Response) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName   string `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	TableSchema string `protobuf:"bytes,2,opt,name=tableSchema,proto3" json:"tableSchema,omitempty"`
	TableAlias  string `protobuf:"bytes,3,opt,name=tableAlias,proto3" json:"tableAlias,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{10}
}

func (x *Table) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Table) GetTableSchema() string {
	if x != nil {
		return x.TableSchema
	}
	return ""
}

func (x *Table) GetTableAlias() string {
	if x != nil {
		return x.TableAlias
	}
	return ""
}

type Join struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Table *Table `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Left  string `protobuf:"bytes,3,opt,name=left,proto3" json:"left,omitempty"`
	Right string `protobuf:"bytes,4,opt,name=right,proto3" json:"right,omitempty"`
	On    string `protobuf:"bytes,5,opt,name=on,proto3" json:"on,omitempty"`
}

func (x *Join) Reset() {
	*x = Join{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Join) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Join) ProtoMessage() {}

func (x *Join) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Join.ProtoReflect.Descriptor instead.
func (*Join) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{11}
}

func (x *Join) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Join) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *Join) GetLeft() string {
	if x != nil {
		return x.Left
	}
	return ""
}

func (x *Join) GetRight() string {
	if x != nil {
		return x.Right
	}
	return ""
}

func (x *Join) GetOn() string {
	if x != nil {
		return x.On
	}
	return ""
}

type OrderBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dependent string `protobuf:"bytes,1,opt,name=dependent,proto3" json:"dependent,omitempty"`
	Order     string `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *OrderBy) Reset() {
	*x = OrderBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBy) ProtoMessage() {}

func (x *OrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBy.ProtoReflect.Descriptor instead.
func (*OrderBy) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{12}
}

func (x *OrderBy) GetDependent() string {
	if x != nil {
		return x.Dependent
	}
	return ""
}

func (x *OrderBy) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

type Limit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LimitN int32 `protobuf:"varint,1,opt,name=limitN,proto3" json:"limitN,omitempty"`
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Limit) Reset() {
	*x = Limit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limit) ProtoMessage() {}

func (x *Limit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limit.ProtoReflect.Descriptor instead.
func (*Limit) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{13}
}

func (x *Limit) GetLimitN() int32 {
	if x != nil {
		return x.LimitN
	}
	return 0
}

func (x *Limit) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

var File_proto_api_proto protoreflect.FileDescriptor

var file_proto_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x0e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x65, 0x70, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52,
	0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x32, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x22, 0x42, 0x0a, 0x0b, 0x44, 0x65, 0x65, 0x70, 0x57, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x64, 0x65, 0x65, 0x70, 0x12, 0x1f, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x78,
	0x53, 0x71, 0x6c, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x22, 0x9f, 0x01, 0x0a, 0x0a, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x2b, 0x0a, 0x08, 0x63,
	0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x69, 0x78, 0x56, 0x61, 0x72, 0x73, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x61, 0x6c, 0x6c, 0x41, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61,
	0x6c, 0x6c, 0x41, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x41, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x75, 0x73, 0x65, 0x41, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x06, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x67, 0x67, 0x41, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x61, 0x67, 0x67, 0x41, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x41, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x75, 0x73, 0x65, 0x41, 0x73, 0x22,
	0x6a, 0x0a, 0x06, 0x4d, 0x69, 0x78, 0x53, 0x71, 0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x51, 0x4c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x51, 0x4c, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x22, 0xa5, 0x01, 0x0a, 0x07,
	0x4d, 0x69, 0x78, 0x56, 0x61, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x12, 0x33, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x18, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x76,
	0x61, 0x72, 0x73, 0x22, 0x6f, 0x0a, 0x08, 0x4d, 0x69, 0x78, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x27, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x48, 0x00,
	0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x33, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x05, 0x0a,
	0x03, 0x6d, 0x69, 0x78, 0x22, 0x1d, 0x0a, 0x07, 0x53, 0x51, 0x4c, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x22, 0xe0, 0x02, 0x0a, 0x0c, 0x53, 0x51, 0x4c, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65,
	0x12, 0x29, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x78, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12, 0x33, 0x0a, 0x0b, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x27, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x78, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x67, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x78, 0x0a, 0x04, 0x4a, 0x6f,
	0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65,
	0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0x37, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x4e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x2a, 0x59, 0x0a, 0x06,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52, 0x45,
	0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x5f,
	0x44, 0x4f, 0x52, 0x49, 0x53, 0x10, 0x03, 0x2a, 0x56, 0x0a, 0x0f, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54,
	0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x52, 0x41,
	0x54, 0x45, 0x47, 0x59, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x02, 0x2a,
	0x63, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x43,
	0x41, 0x4c, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x47, 0x47, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4c,
	0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x55, 0x53, 0x54,
	0x4f, 0x4d, 0x10, 0x03, 0x32, 0x62, 0x0a, 0x0d, 0x53, 0x71, 0x6c, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x41, 0x70, 0x69, 0x12, 0x51, 0x0a, 0x08, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x71,
	0x6c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x42, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x71, 0x6c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x12, 0x53, 0x71, 0x6c, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x0d, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_api_proto_rawDescOnce sync.Once
	file_proto_api_proto_rawDescData = file_proto_api_proto_rawDesc
)

func file_proto_api_proto_rawDescGZIP() []byte {
	file_proto_api_proto_rawDescOnce.Do(func() {
		file_proto_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_api_proto_rawDescData)
	})
	return file_proto_api_proto_rawDescData
}

var file_proto_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_api_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_api_proto_goTypes = []any{
	(Driver)(0),            // 0: proto.Driver
	(BuilderStrategy)(0),   // 1: proto.BuilderStrategy
	(CallType)(0),          // 2: proto.CallType
	(*BuilderRequest)(nil), // 3: proto.BuilderRequest
	(*DeepWrapper)(nil),    // 4: proto.DeepWrapper
	(*Expression)(nil),     // 5: proto.Expression
	(*Column)(nil),         // 6: proto.Column
	(*MixSql)(nil),         // 7: proto.MixSql
	(*MixVars)(nil),        // 8: proto.MixVars
	(*MixField)(nil),       // 9: proto.MixField
	(*SQLText)(nil),        // 10: proto.SQLText
	(*SQLReference)(nil),   // 11: proto.SQLReference
	(*Response)(nil),       // 12: proto.Response
	(*Table)(nil),          // 13: proto.Table
	(*Join)(nil),           // 14: proto.Join
	(*OrderBy)(nil),        // 15: proto.OrderBy
	(*Limit)(nil),          // 16: proto.Limit
	nil,                    // 17: proto.Response.DataEntry
}
var file_proto_api_proto_depIdxs = []int32{
	4,  // 0: proto.BuilderRequest.builders:type_name -> proto.DeepWrapper
	0,  // 1: proto.BuilderRequest.driver:type_name -> proto.Driver
	1,  // 2: proto.BuilderRequest.strategy:type_name -> proto.BuilderStrategy
	7,  // 3: proto.DeepWrapper.sql:type_name -> proto.MixSql
	2,  // 4: proto.Expression.callType:type_name -> proto.CallType
	8,  // 5: proto.Expression.vars:type_name -> proto.MixVars
	11, // 6: proto.MixSql.model:type_name -> proto.SQLReference
	10, // 7: proto.MixSql.template:type_name -> proto.SQLText
	6,  // 8: proto.MixVars.column:type_name -> proto.Column
	5,  // 9: proto.MixVars.expression:type_name -> proto.Expression
	6,  // 10: proto.MixField.column:type_name -> proto.Column
	5,  // 11: proto.MixField.expression:type_name -> proto.Expression
	13, // 12: proto.SQLReference.from:type_name -> proto.Table
	14, // 13: proto.SQLReference.join:type_name -> proto.Join
	5,  // 14: proto.SQLReference.where:type_name -> proto.Expression
	9,  // 15: proto.SQLReference.groupBy:type_name -> proto.MixField
	5,  // 16: proto.SQLReference.aggregation:type_name -> proto.Expression
	9,  // 17: proto.SQLReference.select:type_name -> proto.MixField
	15, // 18: proto.SQLReference.orderBy:type_name -> proto.OrderBy
	16, // 19: proto.SQLReference.limit:type_name -> proto.Limit
	17, // 20: proto.Response.Data:type_name -> proto.Response.DataEntry
	13, // 21: proto.Join.table:type_name -> proto.Table
	3,  // 22: proto.SqlBuilderApi.Generate:input_type -> proto.BuilderRequest
	12, // 23: proto.SqlBuilderApi.Generate:output_type -> proto.Response
	23, // [23:24] is the sub-list for method output_type
	22, // [22:23] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_api_proto_init() }
func file_proto_api_proto_init() {
	if File_proto_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DeepWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Expression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MixSql); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*MixVars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*MixField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SQLText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SQLReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Join); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*OrderBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Limit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_api_proto_msgTypes[4].OneofWrappers = []any{
		(*MixSql_Model)(nil),
		(*MixSql_Template)(nil),
	}
	file_proto_api_proto_msgTypes[5].OneofWrappers = []any{
		(*MixVars_Column)(nil),
		(*MixVars_Expression)(nil),
		(*MixVars_Context)(nil),
		(*MixVars_Number)(nil),
	}
	file_proto_api_proto_msgTypes[6].OneofWrappers = []any{
		(*MixField_Column)(nil),
		(*MixField_Expression)(nil),
	}
	file_proto_api_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_api_proto_goTypes,
		DependencyIndexes: file_proto_api_proto_depIdxs,
		EnumInfos:         file_proto_api_proto_enumTypes,
		MessageInfos:      file_proto_api_proto_msgTypes,
	}.Build()
	File_proto_api_proto = out.File
	file_proto_api_proto_rawDesc = nil
	file_proto_api_proto_goTypes = nil
	file_proto_api_proto_depIdxs = nil
}
